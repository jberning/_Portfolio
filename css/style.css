@media (prefers-reduced-motion: reduce) {
}
html {font-size:15px;}
body {
    position: relative;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    color: var(--color-neutral-0);
    background-color: var(--color-neutral-7);
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    margin: 0;
    width: 100vw;
    height: 100vh;
    /* overflow: hidden; */
    --section-max-width: 650px;
    counter-reset:pageCount linkCount;
}

body.state-loaded .loader-container {display: none;}
body.state-loading .loader ~ * {
    display: none;
}
@media (prefers-color-scheme: light) {
    [data-theme="dark"] {
        display: none;
    }
}
@media (prefers-color-scheme: dark) {
    [data-theme="light"] {
        display: none;
    }
}
.loader-container { 
    z-index: 999;
    position: absolute;
    inset: 0;
    display: grid;
    place-items: center;
    background-color: var(--color-neutral-7);
}
body.state-load-transition .loader-container.fade-out {
    transition-duration: 3s;
    transition-delay: .25s;
    transition-timing-function: ease-in;
    transition-property: background-color;
    /* opacity: 0; */
    background-color: transparent;
}
body.state-load-transition .loader-container.fade-out .loader {
    transition-duration: inherit;
    transition-delay: inherit;
    transition-timing-function: inherit;
    transition-property: font-size, --rot;
    font-size: 100vw;
    --rot: 0;
}
.theme-circle{
    --bw: 0.75em;
    --lw: 15em;
    --rot:0deg;
    color: var(--color-neutral-1);
    border: currentColor solid var(--bw);
    width: 5.5em;
    aspect-ratio: 1;
    border-radius: 100%;
    rotate: var(--rot);
    animation: rotating 3s infinite linear;

}
.loader {
    font-size: 0.5em;
    position: absolute;
    /* margin-top: calc(50vh - 6%); */
    transform-origin: center center;
    
}
@property --rot {
  initial-value: 0deg;
  inherits: true;
  syntax: '<angle>';
}
@keyframes rotating {
    to {
        --rot: 360deg;
    }
}
.loader::before {
    content:"";
    display: block;
    position: absolute;
    width: var(--lw);
    /* inset-inline: calc(var(--bw) * -1); */
    /* right: -140%; */
    left: 100%;
    top: calc(50% - var(--bw)/2);
    border-top: currentColor solid var(--bw);
    transform-origin: 50% 50%;
    /* transform: translate(calc(100% - var(--bw)), 300%); */
}

.loader::after {
    content: "";
    display: block;
    position: absolute;
    /* inset: calc(var(--bw) * -1); */
    top: calc(var(--bw) * -1);
    left: calc(100% + var(--lw));
    width: inherit;
    aspect-ratio: inherit;
    border: inherit;
    border-radius: inherit;
    font-size: inherit;
    border-top-color: var(--color-contrast-5);
    /* transform-origin: calc(100% + var(--bw)*2 + var(--lw)) 50%; */
    /* transform: translateX(calc(100% - var(--bw)*2 + var(--lw))); */
    rotate: calc(var(--rot) * -3 + 0deg);
}
#bg {
    position: fixed;
    inset: 0;
    z-index: -99;
    perspective: 10em;
    perspective-origin: 100% 0%;
    overflow: hidden;
}
#scene {
    position: absolute;
    inset: 0;
    transform-style: preserve-3d;
    height: 250%;
    width: 300%;
    transform: translate(-14%, -6%) rotateX(-3deg) rotateY(-1deg) rotateZ(-3deg) translateZ(-15px);
    background-color: var(--color-prime-6);
    background-image: 
      linear-gradient(to right top, var(--color-neutral-6), var(--color-neutral-3),var(--color-neutral-3), var(--color-neutral-1), rgb(255,255,255,0.5) 75%);
    /* just for fallback if svg does not work */
    background-image: 
        url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='28' height='49' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='hexagons' fill='%239C92AC' fill-opacity='0.25' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.98-7.5V0h-2v6.35L0 12.69v2.3zm0 18.5L12.98 41v8h-2v-6.85L0 35.81v-2.3zM15 0v7.5L27.99 15H28v-2.31h-.01L17 6.35V0h-2zm0 49v-8l12.99-7.5H28v2.31h-.01L17 42.15V49h-2z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")
        ,
        linear-gradient(to right top, var(--color-neutral-6), rgb(255,255,255,0.25) 75%);
    
}
.signiture {
    position: absolute;
    inset: 0;
    opacity: 0.15;
    filter: drop-shadow(-3em 5em 1em black) blur(0.2em);
}
#scene .signiture{
    transform: translate(-304px, -357px) scale(0.55);

}
header {
    position: fixed;
    inset: 0;
    /* top: 0;
    inset-inline:0; */
    display: flex; 
    place-content: space-between;
    place-items: flex-start;
    padding: .75em;
    padding-bottom: 1.6em;
    overflow: hidden;
    z-index: 1;
    pointer-events: none;
    color: var(--color-prime-1);
}
header > *{
    pointer-events: all;
}
header h1 {
    text-shadow: var(--text-shad);
    font-family: unset;
    font-variant:small-caps;
}
header a {
    color:inherit; 
    text-decoration: none;
    padding: .25em; 
}
:where(a, button){
    opacity: .85;
}
:where(a, button):where(:hover, :focus){
    transition-property: opacity;
    opacity: 1;
    outline-offset: 0;
}
:where(a.button, button, [role="button"]):where(:active){
    transition-property: outline-offset, box-shadow;
    outline-offset: .25em;
    outline: var(--color-warning) .3em solid;
    box-shadow: -1px 2px 10px -3px black inset;
}
header input {
    display: none;
}
header nav a {
    width: 100%;
    font-family: var(--head-FF);
	text-decoration: none;

    counter-increment: linkCount;
}
header nav a::before {
    content: counters(linkCount, ".", decimal-leading-zero) ". ";
    color:var(--color-accent-1);
}
header nav li{ position: relative;}
header nav span.theme-circle{
    position: absolute;
    z-index: -1;
    font-size: .2em;
    opacity: 0;
    transition-property: translate, opacity;
    border-top-color: var(--color-contrast-5);
}
header nav a:is(:hover, :focus, :active) ~ span{
    opacity: 1;
    translate: 0% 0%;
}



/*--- main */
body {
    --header-height: 15px;
    scroll-behavior: smooth;
    scroll-padding-top: var(--header-height);
}
body::-webkit-scrollbar {
    display: none;
  }
main {
    /* position: absolute; */
    position: relative;
    height: 100%;
    width: 100%;
    /* inset: 6em 4.5em; */
    /* inset: 0; */
    /* margin: 6em 6.5em; */
    /* perspective: 20em; */
    /* perspective-origin: 50% 50%; */
    /* overflow: hidden; */
}
h3,h4,h5,h6 {
    color: var(--color-accent-2);
    font-weight: bold;
    line-height: 1.1;
}
main > .container {
    /* transform-style: preserve-3d; */
    /* transform: translateX(3.2em) translateZ(-19em) rotateX(-4deg) rotateY(8deg) rotateZ(-3deg); */
    /* margin: 6em 0; */
    /* overflow-y: scroll; */
    height: 100%;
}
.app::-webkit-scrollbar {
        display: none;
}
.app {
    scroll-behavior: smooth;
    --shiny-slide-delay: 5s;
    overflow-y: scroll;
    scroll-snap-type: y mandatory;
}
.app > * {
  /* display: none; */
  /* transform: translateY(100%); */
  height: 100%;
  display: grid;
  scroll-snap-align: start;
}
.app > *:first-child {
  /* display: block; */
  transform: translateY(0%);
}

/* .app > *:target {
  display: initial;
  animation-name: fade;
}
  
.app > *:target ~ * {
  display: none;
} */

/*---  */
section {
    --block: 3vh;
    --inline: 3vw;
    position: relative;
    height: auto;
    max-height: 100%;
    max-width: var(--section-max-width);
    margin-inline: auto;
    counter-increment: pageCount;
}
section > .container {
    position: relative;
    width: 100%;
    /* height: auto; */
    /* max-height: 100%; */
    max-height: calc(100% - var(--header-height));
    transform: translateY(calc(var(--header-height) ));
    margin: auto;
    border-radius: inherit;
    /* overflow: hidden; */
}
/* section::before, section::after {
    content: ">";
    position: absolute;
    top: -10%;
    left:50%;
    font-size: 2em;
    font-weight: bold;
    padding:.3em .2em .4em .1em;
    line-height: 1;
    background-color: hsl(0 0% 0% / 10%);
    box-shadow: var(--box-shad);
    text-shadow: var(--text-shad);
     --trans: translate(-50%, -50%); 
    transform-origin: 0% 0%;
    transform: rotate(-90deg) var(--trans, scale(1));
}
section::after {
    transform: rotate(90deg) var(--trans, scale(1));
    top: 100%;
} */
/*--- shiny effect */
section > .container::after {
    content:'';
    z-index: 1;
    position: absolute;
    display: block;
    inset: 0;
    border-radius: inherit;
    --ban-size: .5%;
    --ban-start: 40%;
    opacity: 0.5;
    background-image: linear-gradient(-60deg, transparent 45%, hsla(0, 0%, 100%, 0.5) 0%, hsla(0, 0%, 100%, 0.5) 55%, transparent 0%);
    background-size: 285%;
    --time: .5s;
    transition-timing-function: linear;
    background-position: right center;
    /* transition-property: background-position; */
    pointer-events: none;
}
body.state-loaded section > .container::after {
    animation: shiny-slide var(--time) linear var(--shiny-slide-delay);

}
@keyframes shiny-slide {
    to { background-position: left center;}
}
/*--- glass effects */
/*--- shadow effect */
section {
    /* border-radius: var(--glass-border-radius);   */
    border-radius: max(0px, min(var(--glass-border-radius), (100% - var(--section-max-width) + 2px) * 9999)) / var(--glass-border-radius);
}
section .glass {
    border-radius: inherit;
}
section .glass {
    position: absolute;
    inset: 0;
    z-index: -1;
}
section .glass::before {
    content: "";
    z-index: -50;
    position: absolute;
    inset: 0;
    border-radius: inherit;
    opacity: 0.5;
    /* background-color: black; */
    background-image: linear-gradient(-90deg, black, transparent),linear-gradient(0deg, rgb(0,0,0,0.6) 60%, transparent 70%);
    background-blend-mode: overlay;
    filter: blur(30px);
    transform-origin: right;
    transform: perspective(20em) rotateY(-9deg) rotateX(-6deg) rotateZ(-6deg) translateZ(-40px) translateX(-45px) translateY(30px) scale(1.8,1.1);

}
/*--- lens flare */
section .glass::after {
    --ring-pos: 23%;
    --ring-size: 4%;
    --flare-width: 4%;
    content: "";
    display: block;
    position: absolute;
    z-index: 1;
    transform-origin: center;
    top: 5px;
    left: 103%;
    font-size: 150px;
    width: 1em;
    aspect-ratio: 1;
    border-radius: 100%;
    opacity: 0.8;
    --bgi-ring: radial-gradient(white 3%, transparent 14%, transparent calc(var(
    --ring-pos) - var(--ring-size)), rgba(255, 255, 255, 0.15) var(--ring-pos), transparent calc(var(--ring-pos) + var(--ring-size)));
    --bgi-ellipse: radial-gradient(100% var(
    --ring-pos) ellipse at 50% 50%, rgb(255 255 255 / .7) 4%, transparent 50%);
    --bgi-flareV: radial-gradient(var(
    --flare-width) 100% at 50% 50%, rgb(255 255 255 /.3) 2%, transparent 50%);
    --bgi-flareH: radial-gradient(90% var(
    --flare-width) at 50% 50%, rgb(255 255 255 / .7) 2%, transparent 50%);
    --bgi-circle: radial-gradient(rgba(255, 255, 254, 0.15) 35%, rgba(255, 255, 255, 0.2) 50%, transparent 0%);
    background-image: var(--bgi-ring),var(--bgi-ellipse), var(--bgi-flareV), var(--bgi-flareH), var(--bgi-flareH), var(--bgi-circle), var(--bgi-circle), var(--bgi-circle);
    background-size: 100%,100%,100% 60%, 100% 109%, 100% 91%, 30% 30%, 20% 20%, 8% 8%;
    background-position: 100% 100%, 100% 100%, 100% 50%, 100% 80%, 100% 80%, 30% 70%, 20% 78%, 19% 80%;
    background-repeat: no-repeat;
    transform: perspective(300px) translate(-50%, -50%) rotateX(-5deg) rotateY(-5deg) rotateZ(-1deg) skew(-17deg, 0deg) translateZ(40px);
}
/*--- Extra fancy way of selecting the section heading */
section > .container > * {
    padding: var(--block) var(--inline);
}
section h2 {
    font-size: 3.5vh;
    display: flex;
    place-items: center;
    border-top-right-radius: inherit;
    border-top-left-radius: inherit;
    color: var(--color-prime-1);
    text-shadow: var(--text-blox), var(--text-shad);
    /* -webkit-background-clip: text; */
    /* -webkit-text-fill-color: transparent; */
    /* background-color: var(--color-prime-6); */
    background-image: linear-gradient(0deg, rgb(255,255,255,.1), transparent 55%, rgb(255,255,255, 0.3) 90%, rgb(255 255 255 / .2) 100%), radial-gradient(60% 10% at 30% 6%, rgb(255,255,255,0.4), transparent);
    text-transform: uppercase;
    letter-spacing: 0.03em;
    -webkit-text-stroke-width: 0.01em;
    -webkit-text-stroke-color: rgb(255 255 255 / 55%);
    /* backdrop-filter: blur(3px); */
}
section h2 > * {    font-size: 2em;}

section h2:before {
    content: counters(pageCount, ".", decimal-leading-zero) ". ";
    position: absolute;
    right: 5%;
    font-size: 4em;
    opacity: .1;
    font-weight: normal;
    z-index: -1;
}
section .block {
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
    background-color: var(--color-neutral-7);
    /* background-blend-mode: luminosity; */
    /* mix-blend-mode: luminosity; */
    backdrop-filter: blur(var(--blur));
    font-size: .8em;
    display: grid;
    gap: 2em;
    place-items: center flex-start;
    place-content: center;
    grid-auto-flow: row;
    position: relative;
    gap: 5vh var(--inline);
    max-height: calc(85vh - var(--block)*2 - var(--header-height));
    overflow: auto;
    align-content: flex-start;
    grid-auto-columns: 1fr;
}
section .block h3 {
    font-size: 1.5em;
}
section p {
    line-height: max(1.5em, 3.5vh);
    letter-spacing: 0.1em;
    user-select: none;
}
#s1 .block {
    grid-auto-flow: column;
    grid-auto-columns: 25% 1fr;
    grid-auto-rows: auto;
    grid-template-columns: [left] 12em [right] 1fr;
    grid-template-rows: auto [last-line];
}
#s1 .block > *:first-child {
    grid-row: 1 / span 7;
}
#s1 .block > *:not(:first-child){
    grid-column: 2;
}
.card-flip{
  position: relative;
  width: 100%;
  height: 100%;
    perspective: 1000px;
}
.card-flip-content {
  /* position: absolute; */
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  display: grid;
  grid-template-columns: 1fr;
  align-content: center;
  justify-content: center;
  align-items: center;
  justify-items: center;
    --t:10s;
}
.state-loaded .card-flip-content{
  animation: cardflip var(--t) 5s infinite alternate backwards cubic-bezier(0.86, 0.01, 0.38, 1.21);
}
.card-flip :where(.front, .back){
    /* position: absolute; */
    /* position: relative; */
    /* top: 0; */
    grid-row-start: 1;
    grid-column-start: 1;
    display: grid;
    place-content: center;
    height: 100%;
    width: 100%;
    -webkit-backface-visibility: hidden; /* Safari */
    backface-visibility: hidden;
}
.card-flip .back{
    transform: rotateY( 180deg );
}
/* .card-flip :where(.front, .back) > :where(*, *::before, *::after){
    --card-depth:1.5px;
    outline: solid 1.5px var(--color-neutral-8);
}
.card-flip :where(.front, .back) > :where(*::before){
    z-index: -1;
    transform: translateZ(calc(-1 * var(--card-depth))), rotateY(1deg);
}
.card-flip :where(.front, .back) > :where(*::after){
    z-index: -2;
    transform: translateZ(calc(-2 * var(--card-depth))), rotateY(-1deg);
} */
@keyframes cardflip {
    0%, 80%{
        transform: rotateY(0deg);
    }
    90%, 100%{
        transform: rotateY(180deg);
    }
    
}
#s1 .block .image-container > *{
    animation-duration: inherit;
    animation-delay: inherit;
    animation-fill-mode: inherit;
    animation-iteration-count: inherit;
    animation-direction: inherit;
    animation: toggleCardFlip;
}
#s1 .block .image-container::before, #s1 .block .image-container::after {
    content: "";
    display: block;
    inset:0;
    background-color: var(--color-neutral-7);
    transform: translateY(1px) translateZ(1px);
}
#s1 .block .image-container > *:not(:first-child) {
    display: none;
}
h4{
    color: var(--color-prime-2);
}
.button-set {
    font-size: .9em;
    display: flex;
    gap: 1.5em;
    justify-content: space-between;
    /* width: 100%; */ 
    margin: auto;
}
.button {
    padding: 1em 1.5em;
    text-decoration: none;
    color: var(--color-prime-1);
    border: .1em solid currentColor;
    border-radius: .33em;
    background-color: var(--color-prime-6);
    background-image: linear-gradient(45deg, var(--color-prime-7), var(--color-prime-4) 200%);
    letter-spacing: 0.15em;
    font-variant: small-caps;
    position: relative;
    z-index: 1;
}
.button.cta {
    /* color: var(--color-contrast-5); */
    background-color: var(--color-contrast-5);
    background-image: linear-gradient(45deg, var(--color-contrast-5), var(--color-contrast-1) 250%);
    filter:contrast(3);
}
/* :where(:hover, :focus, :active) */
.button::before,
.button::after{
    content: "";
    display: block;
    position: absolute;
    z-index: -1;
    --bw: .3em;
    transition-property: transform, opacity;
    transform: translateY(-100%);
    opacity: 0;
    transition-delay: 0;
}
.button::before{
    left: 45%;
    top: 125%;
    width: 15%;
    aspect-ratio: 1;
    border-radius: 100%;
    border: var(--bw) var(--color-prime-1) solid;
}
.button::after{
    left: 54%;
    top: 100%;
    border-left: var(--bw) var(--color-prime-1) solid;
    height: 25%; 
}
.button:is(:hover, :focus, :active)::before,
.button:is(:hover, :focus, :active)::after{
    opacity: 1;
    transform: translateY(0);
    transition-delay: calc(var(--time)*2);
}
[class*="tooltip"]{
    position: relative;
}
:where(.tooltip-hover, .tooltip-click a) { 
    font-style: normal;
    text-decoration: underline dotted .3em;
    color: inherit;
}
/* [class*="tooltip"]:is(::after){ */
[class*="tooltip"]::after{
    content: attr(alt);
    font-size: 0em;
    padding: 0.4em 0.9em;
    position: absolute;
    width: fit-content;
    /* left: calc(-100% + 0.4em*2); */
    left:0%;
    top: 95%;
    /* border: var(--color-prime-7) solid 1px; */
    border-radius: 0.5em;
    background-color: var(--color-prime-7);
    background-color: var(--color-prime-1);
    color: var(--color-prime-7);
    box-shadow: -2px 3px 4px -2px rgb(0,0,0,1);
    transition-delay: .25s;
    transition-property: font-size, opacity;
    opacity: 0;
}
[class*="tooltip"]:where(:hover, :focus, :active):after{
    font-size: .85em;
    opacity: 1;
}

/* text  roladex effect*/
.text-line-roll{
    overflow: hidden;
    --roll-line-height:3em;
    height: var(--roll-line-height);
    width: max-content;
    margin-block: -1em;
    counter-reset:rollCount;
}
.text-line-roll :where(ul,li){
    line-height: var(--roll-line-height);
    float: left;
}
/* This style is only if list is inline so there is a space before the start */
.text-line-roll :where(* + ul) li::before{
    content: "\a0";
    display: inline;
}
.text-line-roll :where(li + li){
    clear: left;
}
.text-line-roll :where(li){
    counter-increment: rollCount;
}
/* incase the is inner element that override line, two levels down for now */
.text-line-roll :is(li > *, li > * > *){
    line-height: inherit;
}
.text-line-roll > ul{
    animation: roll-up-one 5s 1s both cubic-bezier(0.25, 0, 0.75, 1);
}
body:not(.state-loaded) .text-line-roll > ul{
    animation-play-state: paused;
}

@keyframes roll-up-one {
    /* 0%, 100% { transform: translateY(0) }
    20%, 80% { transform: translateY(calc(-1 * var(--roll-line-height))) }
    20%, 80% { transform: translateY(calc(-1 * var(--roll-line-height))) } */
    from {
        transform: translateY(calc(-1 * 6 * var(--roll-line-height)));
    }
    /* 5%, 95%{box-shadow: 0 0 2px 0 black inset;} */
  }

.block .grid-column{
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 49% 1fr;
    place-content: space-between;
    place-items: center;
    width: 100%;
}
.block .grid-row{
    display: grid;
    grid-auto-flow:row;
    height: 100%;
    width: 100%;
}
#s2 .block{}
#s2 div:has(iframe){z-index: 1;}
#s2 iframe{
    width: 100%;
    height: 220%;
    margin-block: -11%;
    z-index: -1;
}
/*  */
#s3 .block{
    place-content: stretch;
}
#s3 .grid-row{
    gap: 0.7em;
}
#s3 .grid-column{
    /* grid-template-columns: auto;
    grid-template-rows: auto; */
    place-items: stretch;
    grid-auto-columns: unset;
    place-content: unset;
    height: 2em;
}
#s3 .flex-column{
    width: 100%;
    height: 2em;
    display: flex;
    flex-direction: row;
}
.tech{
    position: relative;
    width: 100%;
    height: 100%; 
    /* min-width: 2em;
    max-width: 3em; */
/* 
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain; */
    background-color: white;
    --mask: var(--url) center center no-repeat;
    -webkit-mask: var(--mask);
    mask: var(--mask);
    -webkit-mask-size: contain;
    mask-size: contain;
}
.tech[data-icon="html"] {--url: url(../images/html5-svgrepo-com.svg);}
.tech[data-icon="css"] {--url: url(../images/css3-02-svgrepo-com.svg);}
.tech[data-icon="js"] {--url: url(../images/javascript-svgrepo-com.svg);}
.tech[data-icon="json"] {--url: url(../images/json-svgrepo-com.svg);}
.tech[data-icon="xml"] {--url: url(../images/xml-svgrepo-com.svg);}

.tech[data-icon="cloud"] {--url: url(../images/adobe-cloud-131-svgrepo-com.svg);}
.tech[data-icon="fl"] {--url: url(../images/adobe-flash-svgrepo-com.svg);}
.tech[data-icon="as"] {--url: url(../images/actionscript-svgrepo-com.svg);}
.tech[data-icon="ps"] {--url: url(../images/adobe-ps-svgrepo-com.svg);}
.tech[data-icon="ae"] {--url: url(../images/adobe-ae-svgrepo-com.svg);}
.tech[data-icon="ai"] {--url: url(../images/adobe-ai-svgrepo-com.svg);}
.tech[data-icon="id"] {--url: url(../images/adobe-id-svgrepo-com.svg);}
.tech[data-icon="dr"] {--url: url(../images/adobe-dreamweaver-svgrepo-com.svg);}
.tech[data-icon="au"] {--url: url(../images/adobe-audition-svgrepo-com.svg);}
.tech[data-icon="xd"] {--url: url(../images/adobe-xd-svgrepo-com.svg);}

.tech[data-icon="php"] {--url: url(../images/php02-svgrepo-com.svg);}
.tech[data-icon="node"] {--url: url(../images/nodejs01-svgrepo-com.svg);}


/*--- footer */
footer {
    display: none;
}




/*  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// */
/*--- mobile */
@media screen and (max-width: 700px) {
    body{ --header-height:58px; }
    main{margin-top: var(--header-height);}
    header::before {
        content: "";
        z-index: -1;
        display: block;
        position: absolute;
        inset-inline: 0;
        top: 0;
        height: var(--header-height);
        background-color: var(--color-second-5);
        opacity: 0.4;
        background-image: url(../images/signiture.svg);
        background-position: center 35%;
        background-size: 52%;
        background-repeat: no-repeat;
        filter: blur(2px);
    }
    header .banner-mobile {
        position: absolute;
        inset-inline: 0;
        top: 0;
        height: var(--header-height);
        background-color: var(--color-second-5);
        opacity: 0.4;
        
    }
    header h1 {
        font-size: 2em; 
    }
    header input[type=checkbox]:checked ~ label {
        --time:1.185s;
        background-color: var(--color-warning);
        text-shadow: var(--text-blox);
        z-index: 99;
    }
    header input[type=checkbox]:checked ~ label::before,
    header input[type=checkbox]:checked ~ label::after {
        --pos:var(--pos-origin);
        --time:.75s;
    }
    header input[type=checkbox]:checked ~ label::before {
        transform: rotate(45deg) translateX(2px);
    }
    header input[type=checkbox]:checked ~ label::after {
        transform: rotate(-45deg) translateX(5%);
    }
    header input[type=checkbox]:checked ~ label > * {
        opacity: 1;
        z-index: 98;
        transition-delay: 0s;
        --time:1s;
        transform: scale(4) translateX(-375%);
        color: white;
    }
    header input[type=checkbox]:checked ~ nav {
        transition-property: opacity;
        opacity: 1;
        transform: translateY(0);
    }
    header input[type=checkbox]:checked ~ nav li {
        transition-delay: var(--t);
        transform: translateX(0);
    }
    header label.btn {
        --pos-origin: 1.35em;
        --pos: var(
        --pos-origin);
        z-index: 2;
        display: flex;
        position: relative;
        place-items: center;
        place-content: center;
        font-size: 0.6em;
        font-weight: bold;
        width: 4.4em;
        aspect-ratio: 1.1;
        color: var(--color-prime-5);
        box-shadow: 
        0 -.01em 0 .1em var(--color-prime-2), 
        0 -.03em 0 .1em var(--color-prime-3),
        0 -.04em 0 .1em var(--color-prime-4),
        0 -.05em 0 .1em var(--color-prime-5),
        0 -.055em 0 .1em  var(--color-prime-6),
        var(--box-shad);
        /* background-color:var(--color-prime-2); */
        --change: background-color, var(
        --tp-props,"");
        will-change: var(--change);
        transition-property: var(--change);
    }
    header label::before, header label::after {
        content: "";
        position: absolute;
        top: var(--pos);
        width: 64%;
        height: 0.37em;
        border-radius: 100em;
        background-color: currentColor;
        --change:top, bottom, transform;
        will-change: var(--change);
        transition-property: var(--change);
        transform-origin: 35%;
    }
    header label::after {
        top:unset;
        bottom: var(--pos);
    }
    header label > * {
        display: block;
        opacity: 0;
        transform: scale(0);
        --change:transform, opacity;
        will-change: var(--change);
        transition-property: var(--change);
    }
    header label.btn:hover {
        --pos:.8em;
        background-color: var(--color-prime-11);
    }
    header label:hover > * {
        transition-delay: .2s;
        opacity: 1;
        transform: scale(1);
    }
    /* nav menu styles */
    header nav {
        z-index: 97;
        --time: 1.25s;
        position: absolute; 
        inset: 0;
        background-color: rgba(0, 0, 0, 0.2);
        background-image: radial-gradient(circle at 30%, rgba(0, 0, 0, 0.1), transparent);
        backdrop-filter: blur(0.2em);
        -webkit-backdrop-filter: blur(0.2em);
        transform: translateX(100%);
        opacity: 0;
        --change: opacity, transform;
        will-change: var(--change);
        transition: opacity var(--time), transform .01ms var(--eo) var(--time);
    }
    header nav ul {
        margin: 5em;
        /* display: flex;
        flex-direction: column; */
        gap: .5em;
        display: grid;
        grid-auto-columns: max-content;
    }
    header nav li {
        --t:.3s;
        --change: transform;
        transform: translateX(300%);
        will-change: var(--change);
        transition-property:var(--change);
        font-size: 3em;
    }
    header nav li:nth-child(2) {
        --t: .4s;
    }
    header nav li:nth-child(3) {
        --t: .5s;
    }
    header nav li:nth-child(4) {
        --t: .6s;
    }
    header nav li:nth-child(5) {
        --t: .7s;
    }
    header nav a:where(:hover, :focus, :active){
        color: var(--color-second-5);
        background-color: var(--color-second-2);
    }
    header nav a {
        padding:.25em .5em;
        color: var(--color-second-1);
        background-color: var(--color-second-4);
        border-top-left-radius:  0.5em;
        border-bottom-right-radius:  0.5em;
        text-shadow: 0 .05em .1em var(--color-neutral-6);
        /* -webkit-text-stroke-width: .01em;
        -webkit-text-stroke-color: var(--color-second-1); */
        /* color:transparent; */
        transition-property: background-color, color;
    }
    nav span.theme-circle{
        left: -20%;
        top: 18%;
        translate: -150% 0%;
    }


    .app > *{
        height: auto;
        font-size: .8em;
    }
    section > .container .block{
        --block:3em;
    }
}
/*--- Desktop */
@media screen and (min-width: 700px) {
    header label.btn {
        display: none;
    }
    header :is(h1, a){
        font-size: .9em;
    }
    header {
        background-color: transparent;
    }
    header nav ul{
        display: flex;
        gap: 4vw;
    }
    nav span.theme-circle{
        left: 50%;
        top: 110%;
        translate: 0% -350%;
    }
}